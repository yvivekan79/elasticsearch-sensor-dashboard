services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=true
      - xpack.security.enrollment.enabled=true
      - ELASTIC_PASSWORD=changeme
      - KIBANA_SYSTEM_PASSWORD=changeme
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - ./init-scripts:/usr/share/elasticsearch/init-scripts
    ports:
      - "9200:9200"
    networks:
      - elastic
    healthcheck:
      test: ["CMD", "curl", "-f", "-u", "elastic:changeme", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.1
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=changeme
      - ELASTICSEARCH_SSL_VERIFICATIONMODE=none
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
      - setup_kibana_user
    networks:
      - elastic
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601/api/status"]
      interval: 30s
      timeout: 10s
      retries: 5
      
  setup_kibana_user:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
    container_name: setup_kibana_user
    command: >
      bash -c '
        echo "Waiting for Elasticsearch to start..."
        until curl -s -u elastic:changeme http://elasticsearch:9200 >/dev/null; do
          sleep 5
        done
        
        echo "Setting kibana_system user password..."
        curl -X POST -u elastic:changeme -H "Content-Type: application/json" http://elasticsearch:9200/_security/user/kibana_system/_password -d "{\"password\":\"changeme\"}"
        echo "Done. Kibana system user password set."
      '
    networks:
      - elastic
    depends_on:
      - elasticsearch
      
  webapp:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: webapp
    environment:
      - ES_HOST=http://elasticsearch:9200
      - ES_USERNAME=elastic
      - ES_PASSWORD=changeme
      - KIBANA_URL=http://kibana:5601
    ports:
      - "5000:5000"
    networks:
      - elastic
    depends_on:
      - elasticsearch
      - kibana
      
  setup_elasticsearch:
    build:
      context: .
      dockerfile: Dockerfile.setup
    container_name: setup_elasticsearch
    environment:
      - ES_HOST=http://elasticsearch:9200
      - ES_USERNAME=elastic
      - ES_PASSWORD=changeme
      - KIBANA_URL=http://kibana:5601
    networks:
      - elastic
    depends_on:
      - elasticsearch
      - kibana
      - setup_kibana_user
    command: >
      /bin/bash -c "
        echo 'Waiting for Elasticsearch and Kibana to be ready...'
        until curl -s -u elastic:changeme http://elasticsearch:9200 >/dev/null; do
          sleep 5
        done
        until curl -s http://kibana:5601/api/status >/dev/null; do
          sleep 5
        done
        
        echo 'Setting up Elasticsearch...'
        python setup_elasticsearch.py
        
        echo 'Ingesting temperature sensor data...'
        python ingest_bulk_to_elasticsearch.py --csv temperaturesensor_data.csv --index temperaturesensor-ds
        
        echo 'Ingesting air quality sensor data...'
        python ingest_bulk_to_elasticsearch.py --csv airqualitysensor_data.csv --index airqualitysensor-ds
        
        echo 'Setting up Kibana dashboards...'
        python kibana_setup.py
        
        echo 'Setup complete!'
      "

networks:
  elastic:
    driver: bridge

volumes:
  esdata:
    driver: local